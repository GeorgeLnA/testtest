function waitForElement(selector,timer=3e4,frequency=100){return new Promise((resolve,reject)=>{let element=document.querySelector(selector);if(timer<=0)return reject(`waitForElement | Couldn't find element with selector: ${selector}`);if(element)return resolve(element);setTimeout(()=>{waitForElement(selector,timer-frequency,frequency).then(resolve).catch(reject)},frequency)})}waitForElement("#cart-drawer .flow-root > ul > li.flex").then(element=>{function setDefaultRadioSelection(sellingPlan,subscriptionDiv){const checkedValue=sellingPlan?"subscription":"one-time";subscriptionDiv.querySelector(`input[value="${checkedValue}"]`).checked=!0}async function appendNewImage(li){const selectHref=li.querySelector("h4 a").href;let currentImage=li.querySelector("img");currentImage.style.display="none";let cwNewImage=li.querySelector(".cw-new-image"),imageSrc=`//aktlondon.com/cdn/shop/files/${new URLSearchParams(selectHref.split("?")[1]).get("variant")}.png`;if(cwNewImage){let interval=setInterval(()=>{cwNewImage.src=imageSrc},100);setTimeout(()=>{clearInterval(interval)},2e3)}else{const newImage=document.createElement("img");newImage.setAttribute("width","80"),newImage.setAttribute("height","104"),newImage.classList.add("w-20","cw-new-image"),newImage.src=imageSrc,currentImage.insertAdjacentElement("afterend",newImage)}}async function initializeSubscriptionProduct(li,index){const selectHref=li.querySelector("h4 a").href,selectQty=li.querySelector(".item-data-wrapper .item-qty-input").value,productUrl=selectHref.split("?")[0],variantId=new URLSearchParams(selectHref.split("?")[1]).get("variant"),{sellingPlanId,variantTitle}=await fetchProductData(productUrl,variantId);if(updateProductTitle(li,variantTitle),sellingPlanId&&!li.querySelector(".cw-subscription-main")){const subscriptionDiv=createSubscriptionDiv(variantId,index);li.querySelector("h4").insertAdjacentElement("afterend",subscriptionDiv),setTimeout(()=>{const sellingPlanName=li.querySelector('[x-text="item.selling_plan_allocation.selling_plan.name"]');setDefaultRadioSelection(sellingPlanName,subscriptionDiv)},100);const radioButtons=subscriptionDiv.querySelectorAll(".cw-subscription-radio");addRadioEventListeners(radioButtons,variantId,sellingPlanId,li,subscriptionDiv)}}function updateProductTitle(li,variantTitle){const spanElement=li.querySelector('span[x-text="item.product_title"]');if(!li.querySelector(".cw-varinat-title")&&variantTitle){const pElement=document.createElement("p");pElement.classList.add("cw-varinat-title"),pElement.textContent=variantTitle=="Default Title"?"":variantTitle,spanElement.insertAdjacentElement("afterend",pElement)}}function createSubscriptionDiv(variantId,uniqueId){const subscriptionDiv=document.createElement("div");subscriptionDiv.classList.add("cw-subscription-main");const hideSubscriptionClass=["32848728916053","40733943169109","39270374211669","40817322983509","40850678972501","31346262048853","32821929377877"].includes(variantId.toString())?" hide-subscription":"";return subscriptionDiv.innerHTML=`
          <div class="cw-subscribe-header ${hideSubscriptionClass}">
            <div class="cw-subscribe">
              <label>
                <input type="radio" name="subscription-option-${variantId}-${uniqueId}" class="cw-subscription-radio" value="one-time">
                <span></span>One-time Purchase
              </label>
              <label>
                <input type="radio" name="subscription-option-${variantId}-${uniqueId}" class="cw-subscription-radio" value="subscription">
                <span></span>Subscribe & Save
              </label>
            </div>
          </div>`,subscriptionDiv}function addRadioEventListeners(radioButtons,variantId,sellingPlanId,selectQty,subscriptionDiv){radioButtons.forEach(radio=>{radio.addEventListener("change",async()=>{const sellingPlan=radio.value==="subscription"?sellingPlanId:null;(await addToCart(variantId,sellingPlan,selectQty,subscriptionDiv)).ok?(console.log(`Success: ${radio.value==="subscription"?"Subscription":"One-time purchase"} product added`),setTimeout(subscriptionProduct,1500)):console.error(`Error: Unable to add ${radio.value==="subscription"?"subscription":"one-time purchase"} product`)})})}async function subscriptionProduct(){document.querySelectorAll("#cart-drawer .flow-root > ul > li.flex").forEach(async(li,index)=>{li.querySelector(".cw-subscription-main")}),console.log("######Hello from CW-subscrive#####")}function handleClassAdded(){subscriptionProduct()}function handleClassRemoved(){document.querySelectorAll(".cw-subscription-main, .cw-varinat-title").forEach(element2=>element2.remove())}new MutationObserver(mutationsList=>{mutationsList.forEach(mutation=>{mutation.type==="attributes"&&mutation.attributeName==="class"&&(console.log("Hello from the Observer..."),document.documentElement.classList.contains("!overflow-hidden")?handleClassAdded():handleClassRemoved())})}).observe(document.documentElement,{attributes:!0,attributeFilter:["class"]});async function fetchProductData(url,variantId){try{const data=await(await fetch(`${url}.js`)).json(),sellingPlanId=data.selling_plan_groups[0]?.selling_plans[0]?.id,matchingVariant=data.variants.find(variant=>variant.id==variantId),variantTitle=matchingVariant?matchingVariant.title:null;return{sellingPlanId,variantTitle}}catch(error){return console.error("Error fetching product data:",error),{sellingPlanId:null,variantTitle:null}}}async function addToCart(variantId,sellingPlanId,selectQty,subscriptionDiv){let quentity=selectQty.querySelector(".item-data-wrapper .item-qty-input").value;const payload={items:[{id:variantId,quantity:quentity,...sellingPlanId&&{selling_plan:sellingPlanId}}]};try{const response=await fetch("/cart/add.js",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(payload)});return subscriptionDiv.closest("li.flex").querySelector('button[type="button"]').click(),setTimeout(()=>{document.querySelectorAll(".cw-subscription-main, .cw-varinat-title").forEach(element2=>element2.remove())},1500),response}catch(error){return console.error("Error adding to cart:",error),{ok:!1}}}document.querySelectorAll("#cart-drawer .flow-root > ul > li.flex button.uline").forEach(removeButton=>{removeButton.addEventListener("click",()=>{setTimeout(handleClassRemoved,600),setTimeout(subscriptionProduct,1500)})}),setTimeout(subscriptionProduct,200),document.addEventListener("customEvent",event=>{console.log("Custom event triggered with data:",event.detail.message),setTimeout(handleClassRemoved,600),setTimeout(subscriptionProduct,600)})});
//# sourceMappingURL=/cdn/shop/t/195/assets/cw-subscribe.js.map?v=122379335859012220521752669237
